void main_vp
(
    float4 position			 : POSITION,
    out float4 oPosition	 : POSITION,
    out float4 oColor		 : COLOR,
    out float  oUV			 : TEXCOORD0,
    out float2  oPosPatch	 : TEXCOORD1,
    uniform float4x4 patchTx,
    uniform float4x4 cubeTx,
    uniform float	 radius,
    uniform float	 nl, // it is nl for lod != 0, clipmap size fot lod == 0
	uniform float4	 blockPos, // yz is 0 for lod != 0, viewpos for lod == 0
    uniform float4x4 viewProj,
    uniform sampler2D heightmap : register(s0)
)
{
	// in block pos
	oPosition = position;
	oPosition.xy += blockPos.xy;
	
	// calculate uv
	float2 uv = oPosition.xy;
	oPosPatch = oPosition.xy;
	
	// fix the uv at lod = 0
	uv += blockPos.zw;
	
	// scale the uv
	uv *= 2 / nl;
		
	// calc alpha
	float steepness = 5;
	float alpha = pow(max(abs(uv.x), abs(uv.y)), steepness);
	
	uv = (uv / 2 + float2(0.5, 0.5));
	uv.y = -uv.y;
	
	//if (alpha > 0.9)
	//	alpha = 1;
	
	// fetch height
	float h = lerp(tex2D(heightmap, uv).r, tex2D(heightmap, uv).g, alpha);
	
	oUV = h;
	//oPosition.z = h * 10;
	
	// calc debug color
	oColor = float4(h, h, h, 1);

	// in patch space
	oPosition = mul(patchTx, oPosition);
	
	// sphereify
	oPosition.xyz = normalize(oPosition.xyz) * (radius + 25 * h);// * (radius + radius * 0.5 * h);

	// in world space
	oPosition = mul(cubeTx, oPosition);
	
	// projection
	oPosition = mul(viewProj, oPosition);	
}

void main_fp
(
	float  uv					  : TEXCOORD0,
	float2 posPatch				  : TEXCOORD1,
	out float4 oColor			  : COLOR,
	uniform sampler1D heightScale : register(s1),
	uniform float4	  clipCenter // if it is used, the x value is non zero
)
{
	if (clipCenter.x > 0) {
		float2 inClipRegion = abs(posPatch - clipCenter.yz) - clipCenter.w;
		clip(max(inClipRegion.x, inClipRegion.y));
	}
	oColor = tex1D(heightScale, uv);
}
